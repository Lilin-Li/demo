name: CI Build and Push

on:
  push:
    branches: ["**"]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
      has_changes: ${{ steps.build-matrix.outputs.has_changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: changed
        uses: tj-actions/changed-files@v45
        with:
          files: |
            services/demo/**
            services/servicea/**
      - name: Build matrix definition
        id: build-matrix
        run: |
          set -eo pipefail
          declare -a services=("services/demo" "services/servicea")
          declare -A seen=()
          matrix_entries=()
          while IFS= read -r file; do
            for svc in "${services[@]}"; do
              prefix="$svc/"
              if [[ $file == ${prefix}* && -z ${seen[$svc]:-} ]]; then
                seen[$svc]=1
                name=$(basename "$svc")
                slug=$(echo "$name" | tr '[:upper:]' '[:lower:]')
                matrix_entries+=("{\"service\":\"$svc\",\"name\":\"$name\",\"image_slug\":\"$slug\"}")
              fi
            done
          done < <(printf "%s\n%s\n" "${{ steps.changed.outputs.modified_files }}" "${{ steps.changed.outputs.added_files }}" | tr ' ' '\n' | sort -u)
          if [ ${#matrix_entries[@]} -eq 0 ]; then
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
            echo 'matrix={"include":[]}' >> "$GITHUB_OUTPUT"
          else
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
            echo "matrix={\"include\":[$(IFS=,; echo "${matrix_entries[*]}")]}" >> "$GITHUB_OUTPUT"
          fi

  verify:
    needs: detect-changes
    if: needs.detect-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Taipei
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'
      - name: Build with Maven
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: mvn -B -Duser.timezone=Asia/Taipei -Dimage.tag=${IMAGE_TAG} clean package

  build-and-push:
    needs: [detect-changes, verify]
    if: needs.detect-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    env:
      TZ: Asia/Taipei
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        env:
          IMAGE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          set -euo pipefail
          svc="${{ matrix.service }}"
          name="${{ matrix.name }}"
          slug="${{ matrix.image_slug }}"
          image="${IMAGE_REPO}/$slug"
          short_sha="${GITHUB_SHA::7}"
          docker buildx build "$svc" \
            --file "$svc/Dockerfile" \
            --tag "$image:$short_sha" \
            --tag "$image:latest" \
            --push
      - name: Checkout GitOps repo
        if: github.event_name == 'push'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/GitOps
          token: ${{ secrets.GH_PAT }}
          path: gitops
      - name: Update image tag in manifests
        if: github.event_name == 'push'
        id: manifest
        working-directory: gitops
        env:
          IMAGE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}
          SERVICE_NAME: ${{ matrix.name }}
          IMAGE_SLUG: ${{ matrix.image_slug }}
        run: |
          set -eo pipefail
          short_sha="${GITHUB_SHA::7}"
          image="${IMAGE_REPO}/${IMAGE_SLUG}:$short_sha"
          deployment_path="k8s/${SERVICE_NAME}/deployment.yaml"
          if [ ! -f "$deployment_path" ]; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
            echo "Missing deployment file for ${SERVICE_NAME}, nothing to update."
            exit 0
          fi
          sed -i "s|image: .*${IMAGE_SLUG}:.*|image: ${image}|" "$deployment_path"
          echo "deployment_path=$deployment_path" >> "$GITHUB_OUTPUT"
          echo "skip=false" >> "$GITHUB_OUTPUT"
      - name: Commit and push manifest changes
        if: github.event_name == 'push' && steps.manifest.outputs.skip == 'false'
        uses: EndBug/add-and-commit@v9
        with:
          cwd: gitops
          add: ${{ steps.manifest.outputs.deployment_path }}
          message: "Update ${{ matrix.name }} image to ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image_slug }}:${{ github.sha }}"
          push: true
          github_token: ${{ secrets.GH_PAT }}
